<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="pagerduty"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
    <target>
        <inSequence>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="apiToken" expression="json-eval($.apiToken)"/>
            <property name="serviceKey" expression="json-eval($.serviceKey)"/>
            <property name="eventType" expression="json-eval($.eventType)"/>
            <property name="description" expression="json-eval($.description)"/>
            <property name="incidentKey" expression="json-eval($.incidentKey)"/>
            <property name="client" expression="json-eval($.client)"/>
            <property name="clientUrl" expression="json-eval($.clientUrl)"/>
            <property name="details" expression="json-eval($.details)"/>
            <property name="incidentId" expression="json-eval($.incidentId)"/>
            <property name="role" expression="json-eval($.role)"/>
            <property name="name" expression="json-eval($.name)"/>
            <property name="email" expression="json-eval($.email)"/>
            <property name="jobTitle" expression="json-eval($.jobTitle)"/>
            <property name="timeZone" expression="json-eval($.timeZone)"/>
            <property name="requesterId" expression="json-eval($.requesterId)"/>
            <property name="userId" expression="json-eval($.userId)"/>
            <property name="include" expression="json-eval($.include)"/>
            <property name="query" expression="json-eval($.query)"/>
            <property name="limit" expression="json-eval($.limit)"/>
            <property name="offset" expression="json-eval($.offset)"/>
            <property name="type" expression="json-eval($.type)"/>
            <property name="address" expression="json-eval($.address)"/>
            <property name="countryCode" expression="json-eval($.countryCode)"/>
            <property name="label" expression="json-eval($.label)"/>
            <property name="isSendShortEmail" expression="json-eval($.isSendShortEmail)"/>
            <property name="since" expression="json-eval($.since)"/>
            <property name="until" expression="json-eval($.until)"/>
            <property name="dateRange" expression="json-eval($.dateRange)"/>
            <property name="fields" expression="json-eval($.fields)"/>
            <property name="status" expression="json-eval($.status)"/>
            <property name="incidentKey" expression="json-eval($.incidentKey)"/>
            <property name="service" expression="json-eval($.service)"/>
            <property name="assignedToUser" expression="json-eval($.assignedToUser)"/>
            <property name="timeZone" expression="json-eval($.timeZone)"/>
            <property name="sortBy" expression="json-eval($.sortBy)"/>
            <property name="noteContent" expression="json-eval($.noteContent)"/>
            <property name="assignedToUser" expression="json-eval($.assignedToUser)"/>
            <property name="escalationPolicy" expression="json-eval($.escalationPolicy)"/>
            <property name="escalationLevel" expression="json-eval($.escalationLevel)"/>
            <pagerduty.init>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <apiToken>{$ctx:apiToken}</apiToken>
            </pagerduty.init>
            <switch source="get-property('transport', 'Action')">
                <case regex="urn:createIncident">
                    <pagerduty.createIncident>
                        <serviceKey>{$ctx:serviceKey}</serviceKey>
                        <eventType>{$ctx:eventType}</eventType>
                        <description>{$ctx:description}</description>
                        <incidentKey>{$ctx:incidentKey}</incidentKey>
                        <client>{$ctx:client}</client>
                        <clientUrl>{$ctx:clientUrl}</clientUrl>
                        <details>{$ctx:details}</details>
                    </pagerduty.createIncident>
                </case>
                <case regex="urn:getIncidentById">
                    <pagerduty.getIncidentById>
                        <incidentId>{$ctx:incidentId}</incidentId>
                    </pagerduty.getIncidentById>
                </case>
                <case regex="urn:listIncidents">
                    <pagerduty.listIncidents>
                        <since>{$ctx:since}</since>
                        <until>{$ctx:until}</until>
                        <dateRange>{$ctx:dateRange}</dateRange>
                        <fields>{$ctx:fields}</fields>
                        <status>{$ctx:status}</status>
                        <incidentKey>{$ctx:incidentKey}</incidentKey>
                        <service>{$ctx:service}</service>
                        <assignedToUser>{$ctx:assignedToUser}</assignedToUser>
                        <timeZone>{$ctx:timeZone}</timeZone>
                        <sortBy>{$ctx:sortBy}</sortBy>
                        <limit>{$ctx:limit}</limit>
                        <offset>{$ctx:offset}</offset>
                    </pagerduty.listIncidents>
                </case>
                <case regex="urn:resolveIncident">
                    <pagerduty.resolveIncident>
                        <incidentId>{$ctx:incidentId}</incidentId>
                        <requesterId>{$ctx:requesterId}</requesterId>
                    </pagerduty.resolveIncident>
                </case>
                <case regex="urn:reassignIncident">
                    <pagerduty.reassignIncident>
                        <incidentId>{$ctx:incidentId}</incidentId>
                        <requesterId>{$ctx:requesterId}</requesterId>
                        <assignedToUser>{$ctx:assignedToUser}</assignedToUser>
                        <escalationPolicy>{$ctx:escalationPolicy}</escalationPolicy>
                        <escalationLevel>{$ctx:escalationLevel}</escalationLevel>
                    </pagerduty.reassignIncident>
                </case>
                <case regex="urn:createUser">
                    <pagerduty.createUser>
                        <role>{$ctx:role}</role>
                        <name>{$ctx:name}</name>
                        <email>{$ctx:email}</email>
                        <jobTitle>{$ctx:jobTitle}</jobTitle>
                        <timeZone>{$ctx:timeZone}</timeZone>
                        <requesterId>{$ctx:requesterId}</requesterId>
                    </pagerduty.createUser>
                </case>
                <case regex="urn:getUserById">
                    <pagerduty.getUserById>
                        <userId>{$ctx:userId}</userId>
                        <include>{$ctx:include}</include>
                    </pagerduty.getUserById>
                </case>
                <case regex="urn:listUsers">
                    <pagerduty.listUsers>
                        <query>{$ctx:query}</query>
                        <include>{$ctx:include}</include>
                        <limit>{$ctx:limit}</limit>
                        <offset>{$ctx:offset}</offset>
                    </pagerduty.listUsers>
                </case>
                <case regex="urn:createContactMethod">
                    <pagerduty.createContactMethod>
                        <userId>{$ctx:userId}</userId>
                        <type>{$ctx:type}</type>
                        <address>{$ctx:address}</address>
                        <countryCode>{$ctx:countryCode}</countryCode>
                        <label>{$ctx:label}</label>
                        <isSendShortEmail>{$ctx:isSendShortEmail}</isSendShortEmail>
                    </pagerduty.createContactMethod>
                </case>
                <case regex="urn:listContactMethods">
                    <pagerduty.listContactMethods>
                        <userId>{$ctx:userId}</userId>
                    </pagerduty.listContactMethods>
                </case>
                <case regex="urn:createNote">
                    <pagerduty.createNote>
                        <incidentId>{$ctx:incidentId}</incidentId>
                        <requesterId>{$ctx:requesterId}</requesterId>
                        <noteContent>{$ctx:noteContent}</noteContent>
                    </pagerduty.createNote>
                </case>
                <case regex="urn:listNotes">
                    <pagerduty.listNotes>
                        <incidentId>{$ctx:incidentId}</incidentId>
                    </pagerduty.listNotes>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>
                                